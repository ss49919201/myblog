openapi: 3.0.0
info:
  title: MyBlog
  version: 0.0.0
tags:
  - name: API
  - name: Post
paths:
  /api/posts:
    get:
      operationId: Posts_list
      description: List Posts
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostList'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - API
        - Post
    post:
      operationId: Posts_create
      description: Create a Post with Enhanced Validation
      parameters:
        - name: X-User-Role
          in: header
          required: true
          description: 'FIXME: use database'
          schema:
            $ref: '#/components/schemas/UserRole'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/ValidationErrors'
                  - $ref: '#/components/schemas/Error'
      tags:
        - API
        - Post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostRequest'
  /api/posts/{id}:
    get:
      operationId: Posts_read
      description: Read Posts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - API
        - Post
    patch:
      operationId: Posts_update
      description: Update a Post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - API
        - Post
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/PostMergePatchUpdate'
    delete:
      operationId: Posts_delete
      description: Delete a Post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - API
        - Post
  /api/posts/{id}/analyze:
    post:
      operationId: Posts_analyze
      description: Analyze a Post
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeResult'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      tags:
        - API
        - Post
components:
  schemas:
    AnalyzeResult:
      type: object
      required:
        - id
        - analysis
      properties:
        id:
          type: string
        analysis:
          type: string
    CreatePostRequest:
      type: object
      required:
        - title
        - body
        - status
        - scheduledAt
        - category
        - tags
        - featuredImageURL
        - metaDescription
        - slug
        - snsAutoPost
        - externalNotification
        - emergencyFlag
      properties:
        title:
          type: string
        body:
          type: string
        status:
          $ref: '#/components/schemas/PublicationStatus'
        scheduledAt:
          type: string
          format: date-time
          nullable: true
        category:
          type: string
        tags:
          type: array
          items:
            type: string
        featuredImageURL:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        snsAutoPost:
          type: boolean
        externalNotification:
          type: boolean
        emergencyFlag:
          type: boolean
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Post:
      type: object
      required:
        - id
        - title
        - body
        - status
        - scheduledAt
        - category
        - tags
        - featuredImageURL
        - metaDescription
        - slug
        - snsAutoPost
        - externalNotification
        - emergencyFlag
        - createdAt
        - publishedAt
      properties:
        id:
          type: string
        title:
          type: string
        body:
          type: string
        status:
          $ref: '#/components/schemas/PublicationStatus'
        scheduledAt:
          type: string
          format: date-time
          nullable: true
        category:
          type: string
        tags:
          type: array
          items:
            type: string
        featuredImageURL:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        snsAutoPost:
          type: boolean
        externalNotification:
          type: boolean
        emergencyFlag:
          type: boolean
        createdAt:
          type: string
          format: date-time
        publishedAt:
          type: string
          format: date-time
          nullable: true
    PostList:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Post'
    PostMergePatchUpdate:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        body:
          type: string
        status:
          $ref: '#/components/schemas/PublicationStatus'
        scheduledAt:
          type: string
          format: date-time
          nullable: true
        category:
          type: string
        tags:
          type: array
          items:
            type: string
        featuredImageURL:
          type: string
          nullable: true
        metaDescription:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
        snsAutoPost:
          type: boolean
        externalNotification:
          type: boolean
        emergencyFlag:
          type: boolean
        createdAt:
          type: string
          format: date-time
        publishedAt:
          type: string
          format: date-time
          nullable: true
      description: ''
    PublicationStatus:
      type: string
      enum:
        - draft
        - scheduled
        - published
    UserContext:
      type: object
      required:
        - role
      properties:
        role:
          $ref: '#/components/schemas/UserRole'
    UserRole:
      type: string
      enum:
        - general
        - editor
        - admin
    ValidationError:
      type: object
      required:
        - code
        - message
        - field
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        field:
          type: string
    ValidationErrors:
      type: object
      required:
        - code
        - message
        - errors
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
